{
	"id": "49e3072046c6748df155c8c7a28c7af4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"RecieveETH.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.21;\r\n\r\n// solidity支持两种特殊的回调函数 receive和fallback，它们主要在两种情况下被使用\r\n// 1. 接收ETH\r\n// 2. 处理合约中不存在的函数调用（代理合约proxy contract）\r\n\r\n// 在solidity0.6.x之前，语法上只有fallback（）函数, 用来接受用户发送的ETH时调用\r\n// 以及在被调用函数签名没有匹配时调用。\r\n// 在0.6版本之后，solidity才将fallback()函数拆分为receive()和fallback()两个函数\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"sources": {
			"RecieveETH.sol": {
				"ast": {
					"absolutePath": "RecieveETH.sol",
					"exportedSymbols": {},
					"id": 2,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						}
					],
					"src": "33:499:0"
				},
				"id": 0
			}
		}
	}
}